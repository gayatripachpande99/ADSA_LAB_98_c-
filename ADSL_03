Implement a problem of smallest number with at least no trailing 
zeroes in factorial. 
Statement: Given a number n. The task is to find the smallest number 
whose factorial contains at least n trailing zeroes.


#include <iostream>
using namespace std;

int trailingZeroCount(int num) {
    int total = 0;
    while (num > 0) {
        total += num / 5;
        num /= 5;
    }
    return total;
}

int minimumFactorialWithZeroes(int target) {
    int start = 0, end = 5 * target;
    int result = -1;

    while (start <= end) {
        int middle = (start + end) / 2;
        int zeros = trailingZeroCount(middle);

        if (zeros >= target) {
            result = middle;
            end = middle - 1;
        } else {
            start = middle + 1;
        }
    }

    return result;
}

int main() {
    int requiredZeroes;
    cout << "Enter the number of trailing zeroes required: ";
    cin >> requiredZeroes;

    int smallest = minimumFactorialWithZeroes(requiredZeroes);
    cout << "Smallest number whose factorial has at least " << requiredZeroes << " trailing zeroes is: " << smallest << endl;

    return 0;
}
